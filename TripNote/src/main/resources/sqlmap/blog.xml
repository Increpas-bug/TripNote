<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="blog_ns">
	
	<!-- 블로그 -->
	<resultMap type="Blog" id="BlogResult">
		<result property="blog_no" column="blog_no"/>
		<result property="user_no" column="user_no"/>
		<result property="blog_title" column="blog_title"/>
		<result property="blog_detail" column="blog_detail"/>
		<result property="blog_profile_photo" column="blog_profile_photo"/>
		<result property="blog_title_photo" column="blog_title_photo"/>
		<result property="blog_font" column="blog_font"/>
		<result property="blog_backgroundcolor" column="blog_backgroundcolor"/>
		<result property="blog_titlecolor" column="blog_titlecolor"/>
		<result property="user_blogyn" column="user_blogyn"/>
	</resultMap>
		
	<!-- 게시글 ResultMap -->
	<resultMap type="Posting" id="PostingResultSet">
		<id property="posting_no" column="posting_no" />
		<result property="posting_title" column="posting_title" />
		<result property="posting_content" column="posting_content" />
		<result property="posting_date" column="posting_date" />
		<result property="posting_uploadpath" column="posting_uploadpath" />
		<result property="posting_hitcount" column="posting_hitcount" />
		<result property="posting_weekly_hitcount" column="posting_weekly_hitcount" />
		<result property="posting_likecount" column="posting_likecount" />
		<result property="posting_badcount" column="posting_badcount" />
		<result property="posting_location" column="posting_location" />
		<result property="user_no" column="user_no" />
		<result property="blog_no" column="blog_no" />
		<result property="blog_title" column="blog_title"/><!-- 블로그제목 -->
		<result property="keepingYN" column="keepingYN"/><!-- 게시글보관여부 -->
		<result property="likesYN" column="likesYN"/><!-- 게시글좋아요여부 -->
	</resultMap>
	
	
	<!-- 1. 사용자가 블로그가 있는지 판단 쿼리 -->
	<select id="blogYNSelect" parameterType="string" resultType="Member">
		select * from users where user_blogyn='Y' and user_no=#{user_no}
	</select>
	
	<!-- 2. 없다면 생성  -->
	<insert id="blogYNInsert" parameterType="string">
		insert into blog (blog_no, user_no)
		values (blog_seq.nextval, #{user_no})
	</insert>
	
	<!-- 3. 사용자 블로그 업데이트 -->
	<update id="blogYNUpdate" parameterType="string">
		update users set user_blogyn='Y' where user_no=#{user_no}
	</update>
	
	<!-- 4. 블로그 정보 불러오기 -->
	<select id="blogInfoSelect" parameterType="string" resultType="Blog">
		select * from blog where user_no=#{user_no}
	</select>
	
	<!-- 프로필사진 수정 -->
	<update id="profilePhotoUpdate" parameterType="Blog">
		update blog set
		blog_profile_photo=#{blog_profile_photo} where user_no=#{user_no}	
	</update>
	
	<!-- 타이틀사진 수정 -->
	<update id="titlePhotoUpdate" parameterType="Blog">
		update blog set
		blog_title_photo=#{blog_title_photo} where user_no=#{user_no}	
	</update>
		
	<!-- 블로글 제목 -->
	<update id="blogTitleUpdate" parameterType="Blog">
		update blog set
		blog_title=#{blog_title} where user_no=#{user_no}
	</update>
	<update id="blogDetailUpdate" parameterType="Blog">
		update blog set
		blog_detail=#{blog_detail} where user_no=#{user_no}
	</update>
	
	
	<select id="selectMyPosting" resultMap="PostingResultSet">
	<![CDATA[
		SELECT posting.*, blog.blog_title
             , CASE (SELECT count(*) 
             		 FROM keeping 
             		 WHERE posting.POSTING_NO = keeping.POSTING_NO 
             		 AND user_no = #{my_user_no})
               WHEN 0 THEN 'N' 
               ELSE 'Y' 
               END keepingYN
             , CASE (SELECT count(*) 
             		 FROM likes 
             		 WHERE posting.POSTING_NO = likes.POSTING_NO 
             		 AND user_no = #{my_user_no})
               WHEN 0 THEN 'N' 
               ELSE 'Y' 
               END likesYN
		FROM posting, blog
		WHERE posting.blog_no = blog.blog_no
		AND posting.user_no = #{my_user_no}
		ORDER BY posting_no DESC
	]]>
	</select>
</mapper>
